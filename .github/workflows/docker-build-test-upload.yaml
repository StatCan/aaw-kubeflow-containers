name: Download a parent image, build a new one, and test it; then upload the image, tags, and manifests to GitHub artifacts

env:
  HADOLINT_VERSION: "2.12.0"

on:
  workflow_call:
    inputs:
      parent-image:
        description: Parent image name
        required: true
        type: string
      image:
        description: Image name
        required: true
        type: string
      base-image:
        description: The base image to build from if not located on our own repo
        required: false
        type: string
      registry-name:
        description: url of the registry <registy-name>.azurecr.io
        required: true
        type: string
    secrets:
      REGISTRY_USERNAME:
        description: The username for the container registry
        required: true
      REGISTRY_PASSWORD:
        description: The password for the container registry
        required: true

jobs:
  build-test-upload:
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000

    steps:
      - uses: actions/checkout@master

      - name: Check for changes
        uses: ./.github/workflows/check-diff.yaml
        id: check-diff
        with:
          image: ${{ inputs.image }}

      - name: Run Hadolint
        run: |
          sudo curl -L https://github.com/hadolint/hadolint/releases/download/v${{ env.HADOLINT_VERSION }}/hadolint-Linux-x86_64 --output hadolint
          sudo chmod +x hadolint
          ./hadolint images/${{ inputs.image }}/Dockerfile --no-fail

      - name: Echo disk usage before clean up
        run: ./.github/scripts/echo_usage.sh

      - name: Free up all available disk space before building
        run: ./.github/scripts/cleanup_runner.sh

      - name: Echo disk usage before build start
        run: ./.github/scripts/echo_usage.sh

      # Connect to Azure Container registry (ACR)
      - uses: azure/docker-login@v1
        with:
          login-server: ${{ inputs.registry-name }}.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Pull parent image
        id: pull-parent
        if: inputs.parent-image != '' && steps.check-diff.outputs.is-diff
        run: make pull/${{ inputs.parent-image }} REPO=${{ inputs.registry-name }}.azurecr.io

      - name: Set BASE_IMAGE variable
        if: steps.check-diff.outputs.is-diff
        run: |
          if [ "${{ inputs.base-image }}" == "" ]; then
            echo "BASE_IMAGE=${{ steps.pull-parent.outputs.image_name }}" >> $GITHUB_ENV
          else
            echo "BASE_IMAGE=${{ inputs.base-image }}" >> $GITHUB_ENV
          fi

      # make build emits full_image_name, image_tag, and image_repo outputs
      - name: Build image
        if: steps.check-diff.outputs.is-diff
        id: build-image
        run: make build/${{ inputs.image }} REPO=${{ inputs.registry-name }}.azurecr.io BASE_IMAGE=${{ env.BASE_IMAGE}}

      - name: Echo disk usage after build completion
        if: steps.check-diff.outputs.is-diff
        run: ./.github/scripts/echo_usage.sh

      - name: Add standard tag names (short sha, sha, and branch) and any other post-build activity
        if: steps.check-diff.outputs.is-diff
        run: make post-build/${{ inputs.image }} REPO=${{ inputs.registry-name }}.azurecr.io

      - name: Pull existing image
        id: pull-existing
        if: ${{ !steps.check-diff.outputs.is-diff }}
        run: make pull/${{ inputs.image }} REPO=${{ inputs.registry-name }}.azurecr.io TAG=staged-builds
        # TODO replace TAG with master

      - name: Retag existing image
        if: ${{ !steps.check-diff.outputs.is-diff }}
        run: make post-build/${{ inputs.image }} REPO=${{ inputs.registry-name }}.azurecr.io SOURCE_FULL_IMAGE_NAME=${{ steps.pull-existing.outputs.image_name }}

      - name: Push image to registry (default pushes all tags)
        run: make push/${{ inputs.image }} REPO=${{ inputs.registry-name }}.azurecr.io

      # Image testing
      - name: Set Up Python for Test Suite
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' 

      - name: Set up venv for Test Suite
        run: |
          python -m pip install --upgrade pip
          make install-python-dev-venv

      # Free up space from build process (containerscan action will run out of space if we don't)
      - run: ./.github/scripts/cleanup_runner.sh
