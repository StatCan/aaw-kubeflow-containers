# This workflow will build a docker container, publish it to Azure Container Registry, and deploy it to Azure Kubernetes Service using a helm chart.
#
# https://github.com/Azure/actions-workflow-samples/tree/master/Kubernetes
#
# To configure this workflow:
#
# 1. Set up the following secrets in your workspace:
#     a. REGISTRY_USERNAME with ACR username
#     b. REGISTRY_PASSWORD with ACR Password
#     c. AZURE_CREDENTIALS with the output of `az ad sp create-for-rbac --sdk-auth`
#
# 2. Change the values for the REGISTRY_NAME, CLUSTER_NAME, CLUSTER_RESOURCE_GROUP and NAMESPACE environment variables (below).
name: build
on:
  push:
    branches:
      - '*'
      - '!master'

env:
  REGISTRY: dummy

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        notebook:
          - RStudio
          - VSCode-CPU
          - VSCode-Spark
          - VSCode-PyTorch
          - VSCode-Tensorflow
          - JupyterLab-CPU
          - JupyterLab-Spark
          - JupyterLab-PyTorch
          - JupyterLab-Tensorflow
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Free disk space
      run: |
        sudo swapoff -a
        sudo rm -f /swapfile
        sudo apt clean
        docker rmi $(docker image ls -aq)
        df -h

    # I hate this
    # https://github.com/docker/build-push-action/issues/37#issuecomment-720358308
    - name: Lowercase Env Vars
      run: |
        echo IMAGE_NAME="$(echo ${{ matrix.notebook }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
        echo REGISTRY=${{ env.REGISTRY }} >> $GITHUB_ENV
        echo REPO=$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT }}

    # Container build and push to a Azure Container registry (ACR)
    - name: Build image
      run: |
        sudo apt-get install --yes make
        COMMIT=$(make get-commit)
        echo
        cd output/${{ matrix.notebook }}
        docker build . --build-arg BASE_VERSION=$COMMIT -t ghcr.io/$REPO/$IMAGE_NAME:${{ github.sha }}
        cd -

    - name: Publish to ghcr.io
      run: |
        docker push ghcr.io/$REPO/$IMAGE_NAME:${{ github.sha }}

    # # Scan image for vulnerabilities
    # - uses: Azure/container-scan@v0
    #   with:
    #     image-name: docker.pkg.github.com/$REPO/$IMAGE_NAME:${{ github.sha }}
    #     severity-threshold: CRITICAL
    #     run-quality-checks: false

  scan:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        notebook:
          - RStudio
          - VSCode-CPU
          - VSCode-Spark
          - VSCode-PyTorch
          - VSCode-Tensorflow
          - JupyterLab-CPU
          - JupyterLab-Spark
          - JupyterLab-PyTorch
          - JupyterLab-Tensorflow
    steps:
    # I hate this
    # https://github.com/docker/build-push-action/issues/37#issuecomment-720358308
    - name: Lowercase Env Vars
      run: |
        echo IMAGE_NAME="$(echo ${{ matrix.notebook }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
        echo REGISTRY=${{ env.REGISTRY }} >> $GITHUB_ENV
        echo REPO=$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT }}

    # Scan image for vulnerabilities
    - uses: Azure/container-scan@v0
      with:
        image-name: ghcr.io/${{ env.REPO }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        severity-threshold: CRITICAL
        run-quality-checks: false
