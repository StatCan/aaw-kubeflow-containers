# This workflow will build a docker container, publish it to Azure Container Registry, and deploy it to Azure Kubernetes Service using a helm chart.
#
# https://github.com/Azure/actions-workflow-samples/tree/master/Kubernetes
#
# To configure this workflow:
#
# 1. Set up the following secrets in your workspace:
#     a. REGISTRY_USERNAME with ACR username
#     b. REGISTRY_PASSWORD with ACR Password
#     c. AZURE_CREDENTIALS with the output of `az ad sp create-for-rbac --sdk-auth`
#
# 2. Change the values for the REGISTRY_NAME, CLUSTER_NAME, CLUSTER_RESOURCE_GROUP and NAMESPACE environment variables (below).
name: build gpu
on:
  push:
    branches:
      - master
  pull_request:
    branches: 
      - master  # DEBUG

# Environment variables available to all jobs and steps in this workflow
env:
  REGISTRY_NAME: k8scc01covidacr
  REGISTRY: k8scc01covidacr.azurecr.io
  CLUSTER_NAME: k8s-cancentral-01-covid-aks
  CLUSTER_RESOURCE_GROUP: k8s-cancentral-01-covid-aks
  LATEST_IMAGE_TAG: master
  TRIVY_TIMEOUT: 20m0s  # Some images take longer than default 2m to scan
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    # Connect to Azure Container registry (ACR)
    - uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Free disk space (cache + all docker images)
      run: |
        scripts/free_space.sh
        docker rmi $(docker image ls -aq)

    - name: Create Dockerfile for Upstream Equivalent Notebook GPU
      working-directory: upstream-equivalent-notebook-gpu
      run: |
        ./create_dockerfile.sh

    - name: Upstream Equivalent Notebook GPU (equivalent to docker-stacks datascience)
      id: upstream-equivalent-notebook-gpu
      working-directory: upstream-equivalent-notebook-gpu
      env:
        IMAGE_NAME: upstream-equivalent-notebook-gpu
      run: |
        ../scripts/build_push.sh  --registry ${{ env.REGISTRY }} \
                                            --image_name ${{ env.IMAGE_NAME }} \
                                            --tag_pinned ${{ github.sha }} \
                                            --tag_latest ${{ env.LATEST_IMAGE_TAG }} \
                                            --cache_from ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.LATEST_IMAGE_TAG }} \
                                            --push

    - name: Free disk space (cache)
      run: |
        scripts/free_space.sh

    # # DEBUG : removed temporarily
    # # Scan image for vulnerabilities
    # - uses: Azure/container-scan@v0
    #   with:
    #     image-name: ${{ steps.upstream-equivalent-notebook-gpu.outputs.tag_pinned }}
    #     severity-threshold: CRITICAL
    #     run-quality-checks: false

    - name: Base Notebook GPU
      id: base-notebook-gpu
      working-directory: ./base-notebook/
      env:
        IMAGE_NAME: base-notebook-gpu
      run: |
        ../scripts/build_push.sh  --registry ${{ env.REGISTRY }} \
                                            --image_name ${{ env.IMAGE_NAME }} \
                                            --tag_pinned ${{ github.sha }} \
                                            --tag_latest ${{ env.LATEST_IMAGE_TAG }} \
                                            --cache_from ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.LATEST_IMAGE_TAG }} \
                                            --base_container ${{ steps.upstream-equivalent-notebook-gpu.outputs.tag_pinned }} \
                                            --push

    - name: Free disk space (cache)
      run: |
        scripts/free_space.sh

    # # # DEBUG : removed temporarily
    # # Scan image for vulnerabilities
    # - uses: Azure/container-scan@v0
    #   with:
    #     image-name: ${{ steps.base-notebook-gpu.outputs.tag_pinned }}
    #     severity-threshold: CRITICAL
    #     run-quality-checks: false

    - name: Minimal Notebook GPU
      id: minimal-notebook-gpu
      working-directory: ./minimal-notebook/
      env:
        IMAGE_NAME: minimal-notebook-gpu
      run: |
        ../scripts/build_push.sh  --registry ${{ env.REGISTRY }} \
                                            --image_name ${{ env.IMAGE_NAME }} \
                                            --tag_pinned ${{ github.sha }} \
                                            --tag_latest ${{ env.LATEST_IMAGE_TAG }} \
                                            --cache_from ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.LATEST_IMAGE_TAG }} \
                                            --base_container ${{ steps.base-notebook-gpu.outputs.tag_pinned }} \
                                            --push

    - name: Free disk space (cache)
      run: |
        scripts/free_space.sh

    # # # DEBUG : removed temporarily
    # # Scan image for vulnerabilities
    # - uses: Azure/container-scan@v0
    #   with:
    #     image-name: ${{ steps.minimal-notebook-gpu.outputs.tag_pinned }}
    #     severity-threshold: CRITICAL
    #     run-quality-checks: false

    # # DEBUG
    # # Machine Learning Notebook nearly takes max space on the node.  Free everything up first
    # # This results in us redownloading the upstream layers.
    # - name: Free disk space (2)
    #   run: |
    #     sudo swapoff -a
    #     sudo rm -f /swapfile
    #     sudo apt clean
    #     docker rmi -f $(docker image ls -aq)
    #     docker system prune -f -a
    #     df -h

    # Container build and push to a Azure Container registry (ACR)
    - name: Machine Learning Notebook GPU
      id: machine-learning-notebook-gpu
      working-directory: ./machine-learning-notebook/
      env:
        IMAGE_NAME: machine-learning-notebook-gpu
      # Remove product docker image after build to save space (they are not used again elsewhere)
      run: |
        ../scripts/build_push.sh  --registry ${{ env.REGISTRY }} \
                                            --image_name ${{ env.IMAGE_NAME }} \
                                            --tag_pinned ${{ github.sha }} \
                                            --tag_latest ${{ env.LATEST_IMAGE_TAG }} \
                                            --cache_from ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.LATEST_IMAGE_TAG }} \
                                            --base_container ${{ steps.minimal-notebook-gpu.outputs.tag_pinned }} \
                                            --push \
                                            --prune_this

    - name: Free disk space (cache)
      run: |
        scripts/free_space.sh

    # Scan image for vulnerabilities
    - uses: Azure/container-scan@v0
      with:
        image-name: ${{ steps.machine-learning-notebook-gpu.outputs.tag_pinned }}
        severity-threshold: CRITICAL
        run-quality-checks: false
