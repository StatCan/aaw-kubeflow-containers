# This workflow will build a docker container and publish it to Azure Container Registry
#
# https://github.com/Azure/actions-workflow-samples/tree/master/Kubernetes
#
# To configure this workflow:
#
# 1. Set up the following secrets in your workspace:
#     a. REGISTRY_USERNAME with ACR username
#     b. REGISTRY_PASSWORD with ACR Password
#     c. AZURE_CREDENTIALS with the output of `az ad sp create-for-rbac --sdk-auth`
#
# 2. Change the values for the REGISTRY_NAME/REGISTRY, CLUSTER_NAME, and CLUSTER_RESOURCE_GROUP
name: build cpu
on:
  push:
    branches:
      - master
  pull_request:
    branches: 
      - master 
      - combine-all-cpu-gpu-dockerfiles #DEBUG
      
# Environment variables available to all jobs and steps in this workflow
env:
  REGISTRY_NAME: k8scc01covidacr
  REGISTRY: k8scc01covidacr.azurecr.io
  CLUSTER_NAME: k8s-cancentral-01-covid-aks
  CLUSTER_RESOURCE_GROUP: k8s-cancentral-01-covid-aks

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TRIVY_TIMEOUT: 20m0s  # Some images take longer than default 2m to scan
    steps:
    - uses: actions/checkout@master

    # Connect to Azure Container registry (ACR)
    - uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Free disk space (cache + all docker images)
      run: |
        scripts/free_space.sh
        docker rmi $(docker image ls -aq)
    
    # Get the branch name - allows running CI on other branches than master for debugging
    - name: Get branch name for image tag
      id: get_branch_name
      run: |
        if [ -z "$GITHUB_HEAD_REF" ]; then 
          echo "##[set-output name=branch_name;]$(echo ${GITHUB_REF#refs/*/})"; 
        else 
          echo "##[set-output name=branch_name;]$(echo ${GITHUB_HEAD_REF})"; 
        fi
        
    # Container build and push to a Azure Container registry (ACR)
    - name: Base Notebook CPU
      id: base-notebook-cpu
      working-directory: ./base-notebook/
      env:
        IMAGE_NAME: base-notebook-cpu
      run: |
        # Get upstream image from build_settings.env

        (source ../build_settings.env && \
         ../scripts/build_push.sh --registry ${{ env.REGISTRY }} \
                                            --image_name ${{ env.IMAGE_NAME }} \
                                            --tag_pinned ${{ github.sha }} \
                                            --tag_latest ${{ steps.get_branch_name.outputs.branch_name }} \
                                            --base_container $UPSTREAM_CONTAINER_CPU \
                                            --push
        )
    
    - name: Free disk space (cache)
      run: |
        scripts/free_space.sh
        
    # Scan image for vulnerabilities
    - uses: Azure/container-scan@v0
      with:
        image-name: ${{ steps.base-notebook-cpu.outputs.tag_pinned }}
        severity-threshold: CRITICAL
        run-quality-checks: false

    # Container build and push to a Azure Container registry (ACR)
    - name: Minimal Notebook CPU
      id: minimal-notebook-cpu
      working-directory: ./minimal-notebook/
      env:
        IMAGE_NAME: minimal-notebook-cpu
      run: |
        ../scripts/build_push.sh --registry ${{ env.REGISTRY }} \
                                            --image_name ${{ env.IMAGE_NAME }} \
                                            --tag_pinned ${{ github.sha }} \
                                            --tag_latest ${{ steps.get_branch_name.outputs.branch_name }} \
                                            --base_container ${{ steps.base-notebook-cpu.outputs.tag_pinned }} \
                                            --push

    - name: Free disk space (cache)
      run: |
        scripts/free_space.sh
    
    # Scan image for vulnerabilities
    - uses: Azure/container-scan@v0
      with:
        image-name: ${{ steps.minimal-notebook-cpu.outputs.tag_pinned }}
        severity-threshold: CRITICAL
        run-quality-checks: false

    # Container build and push to a Azure Container registry (ACR)
    - name: Geomatics Notebook CPU
      id: geomatics-notebook-cpu
      working-directory: ./geomatics-notebook/
      env:
        IMAGE_NAME: geomatics-notebook-cpu
      run: |
        ../scripts/build_push.sh --registry ${{ env.REGISTRY }} \
                                            --image_name ${{ env.IMAGE_NAME }} \
                                            --tag_pinned ${{ github.sha }} \
                                            --tag_latest ${{ steps.get_branch_name.outputs.branch_name }} \
                                            --base_container ${{ steps.minimal-notebook-cpu.outputs.tag_pinned }} \
                                            --push

    - name: Free disk space (cache)
      run: |
        scripts/free_space.sh
    
    # Scan image for vulnerabilities
    - uses: Azure/container-scan@v0
      with:
        image-name: ${{ steps.geomatics-notebook-cpu.outputs.tag_pinned }}
        severity-threshold: CRITICAL
        run-quality-checks: false

    # Container build and push to a Azure Container registry (ACR)
    - name: Machine Learning Notebook CPU
      id: machine-learning-notebook-cpu
      working-directory: ./machine-learning-notebook/
      env:
        IMAGE_NAME: machine-learning-notebook-cpu
      run: |
        ../scripts/build_push.sh --registry ${{ env.REGISTRY }} \
                                            --image_name ${{ env.IMAGE_NAME }} \
                                            --tag_pinned ${{ github.sha }} \
                                            --tag_latest ${{ steps.get_branch_name.outputs.branch_name }} \
                                            --base_container ${{ steps.minimal-notebook-cpu.outputs.tag_pinned }} \
                                            --push

    - name: Free disk space (cache)
      run: |
        scripts/free_space.sh
    
    # Scan image for vulnerabilities
    - uses: Azure/container-scan@v0
      with:
        image-name: ${{ steps.machine-learning-notebook-cpu.outputs.tag_pinned }}
        severity-threshold: CRITICAL
        run-quality-checks: false

    # Container build and push to a Azure Container registry (ACR)
    - name: R-Studio CPU
      id: r-studio-cpu
      working-directory: ./r-studio/
      env:
        IMAGE_NAME: r-studio-cpu
      run: |
        ../scripts/build_push.sh --registry ${{ env.REGISTRY }} \
                                            --image_name ${{ env.IMAGE_NAME }} \
                                            --tag_pinned ${{ github.sha }} \
                                            --tag_latest ${{ steps.get_branch_name.outputs.branch_name }} \
                                            --base_container ${{ steps.minimal-notebook-cpu.outputs.tag_pinned }} \
                                            --push

    - name: Free disk space (cache)
      run: |
        scripts/free_space.sh
    
    # Scan image for vulnerabilities
    - uses: Azure/container-scan@v0
      with:
        image-name: ${{ steps.r-studio-cpu.outputs.tag_pinned }}
        severity-threshold: CRITICAL
        run-quality-checks: false
