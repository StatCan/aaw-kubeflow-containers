pid       /tmp/nginx.pid;

events {
  # No special events for this simple setup
  #worker_connections 100;
}

http {

    include mime.types;
    #map $http_upgrade $connection_upgrade {
    #    default upgrade;
    #    ''      close;
    #}

    # map $upstream_http_location $new_location {
    #    default .$upstream_http_location;
    #}


    client_max_body_size 10G;
    client_body_timeout 300s;
    client_header_timeout 120s;

    proxy_connect_timeout 600;
    proxy_send_timeout 600;
    proxy_read_timeout 600;
    send_timeout 600;


    upstream vnc_proxy {
        server 0.0.0.0:5678;
    }

    server {

        absolute_redirect off;
        # Set a number of log, temp and cache file options that will otherwise
        # default to restricted locations accessible only to root.
        access_log /tmp/nginx_host.access.log;
        error_log  /tmp/nginx_error.log;
        client_body_temp_path /tmp/client_body;
        fastcgi_temp_path /tmp/fastcgi_temp;
        proxy_temp_path /tmp/proxy_temp;
        scgi_temp_path /tmp/scgi_temp;
        uwsgi_temp_path /tmp/uwsgi_temp;

        # Port forwarding stuff
        listen 8888 default_server;
        listen [::]:8888 default_server;

        # root /var/www/html;
        root /tmp/novnc;

        # Add index.php to the list if you are using PHP
        index vnc.html;

        server_name _;

        location = "/favicon.ico" {
            # use favicon in resources folder
            auth_basic off;
            alias /tmp/favicon.ico;
        }

        #location /app/ {
        #    autoindex on;
        #    root  /tmp/novnc/app;
        #}

        #location ~ \.css {
        #    add_header  Content-Type    text/css;
        #}
        #location ~ \.js {
        #    add_header  Content-Type    application/x-javascript;
        #}

        # 301 try_file for trailing slash
        location ~ ^([^.\?]*[^/])$ {
          try_files $request_uri @addslash;
        }

        # 301 redirect for trailing slash
        location @addslash {
          return 301 $request_uri/$is_args$args;
        }


        location ${NB_PREFIX} {
            rewrite ${NB_PREFIX}(.*) $1  break;
            proxy_pass         http://0.0.0.0:8888;
            proxy_redirect     off;
            proxy_set_header   Host $host;

            gzip on;
            gzip_proxied any;
            gzip_types *;

        }

        location = ${NB_PREFIX}/websockify {
            rewrite ${NB_PREFIX}/(.*) /$1  break;

            set $delimeter "";

            if ($is_args) {
                set $delimeter "&";
            }

            set $args "$args${delimeter}resize=true";
            proxy_http_version 1.1;
            proxy_pass http://vnc_proxy/;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # VNC connection timeout
            proxy_read_timeout 61s;

            # Disable cache
            proxy_buffering off;

            gzip on;
            gzip_proxied any;
            gzip_types *;

        }

        location /websockify {
            #rewrite ${NB_PREFIX}/(.*) /$1  break;
            proxy_http_version 1.1;
            proxy_pass http://vnc_proxy/;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # VNC connection timeout
            proxy_read_timeout 3600s;

            # Disable cache
            proxy_buffering off;

            gzip on;
            gzip_proxied any;
            gzip_types *;

        }


        location ${NB_PREFIX}/websockify {
            #rewrite ${NB_PREFIX}/(.*) /$1  break;
            proxy_http_version 1.1;
            proxy_pass http://vnc_proxy/;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # VNC connection timeout
            proxy_read_timeout 3600s;

            # Disable cache
            proxy_buffering off;

            gzip on;
            gzip_proxied any;
            gzip_types *;

        }

        location / {
            index vnc.html;
            root /opt/novnc/;
            try_files $uri $uri/ /vnc.html?resize=true;
        }

        location = /healthy {
            auth_basic off;
            return 200;
        }

        location = /ping {
            auth_basic off;
            return 200;
        }

        error_page 404 ${NB_PREFIX}/;
        # location     @error_page {
        #     root       /var/www/html/;
        #     rewrite ^  https://domain.com/error/index.html;
        #     break;
        # }

        # Access all-ports via /tools/PORT
        location ~* "^${NB_PREFIX}/(proxy|tools)/(?<access_port>[0-9]+)/(?<remaining_part>.*)" {
            # Allow CORS requests
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin "$http_origin";
                add_header Access-Control-Allow-Credentials "true";
                add_header Access-Control-Allow-Methods "GET, OPTIONS, DELETE, POST, PUT";
                add_header Access-Control-Allow-Headers "Authorization, Content-Type";
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 200;
            }

            add_header Access-Control-Allow-Origin "$http_origin";
            add_header Access-Control-Allow-Credentials "true";
            # Disable proxy buffering - applications like guacamole have problems with this setting
            proxy_buffering off;
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_pass_request_headers on;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_store off;

            proxy_pass http://0.0.0.0:$access_port/$remaining_part$is_args$args;
            gzip on;
            gzip_proxied any;
            gzip_types *;
        }
    }
}
